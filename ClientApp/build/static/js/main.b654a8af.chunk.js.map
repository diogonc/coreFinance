{"version":3,"sources":["shared/Validation/Validation.module.css","App.module.css","screens/productList/components/productItem/ProductItem.module.css","screens/productForm/ProductForm.module.css","screens/viewProduct/ViewProduct.module.css","serviceWorker.js","components/MenuBar/index.js","screens/navigation/index.js","shared/formatters.js","screens/productList/components/productItem/components/productItemActions/index.js","store/actions/productActions.js","store/actions/actionTypes.js","screens/productList/components/productItem/index.js","screens/productList/index.js","hoc/withIdFromUrl/index.js","shared/Validation/index.js","screens/productForm/index.js","screens/editProduct/index.js","screens/viewProduct/index.js","screens/newProduct/index.js","App.js","store/reducers/productRecucers.js","index.js"],"names":["module","exports","Error","MainContainer","Product","ButtonsArea","ViewProduct","Boolean","window","location","hostname","match","MenuBar","props","links","map","link","react_default","a","createElement","react_router_dom","className","to","path","exact","label","role","aria-label","Navigation","components_MenuBar","formatMoney","value","parseFloat","toFixed","formatDate","Date","toLocaleDateString","hour","minute","connect","dispatch","deleteProduct","productId","type","id","actions","onClick","functionToDeleteAProduct","Notification","success","ProductItem","styles","join","product","name","price","creationDate","productItemActions","state","products","useEffect","document","title","length","itens","p","productItem","key","withItemIdFromUrl","WrappedComponent","parseInt","params","item","items","find","Object","assign","react_router","required","toString","trim","graterThen","min","withRouter","_useState","useState","description","_useState2","slicedToArray","updateProduct","form_default","onSubmit","event","preventDefault","saveProduct","history","push","submitForm","input_default","onChange","objectSpread","target","validations","step","textarea_default","button_default","productForm","addProduct","App","Fragment","navigation","component","NewProduct","EditProduct","render","productList","initialState","getMaxIdFromState","Math","max","apply","reducer","arguments","undefined","action","concat","toConsumableArray","filter","store","createStore","ReactDOM","es","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b654a8af.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Error\":\"Validation_Error__3W5SM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainContainer\":\"App_MainContainer__3gr_b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Product\":\"ProductItem_Product__1Insr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ButtonsArea\":\"ProductForm_ButtonsArea__1cXLG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ViewProduct\":\"ViewProduct_ViewProduct__2Wekl\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst MenuBar = props => {\n  const links = props.links.map(link => (\n    <NavLink className=\"navbar-item\" to={link.path} exact>\n      {link.label}\n    </NavLink>\n  ));\n  return (\n    <nav\n      className=\"navbar is-primary\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"navbar-menu\">\n        <div className=\"navbar-start\">{links}</div>\n      </div>\n    </nav>\n  );\n};\n\nexport default MenuBar;\n","import React from 'react';\n\nimport MenuBar from '../../components/MenuBar';\n\nconst Navigation = () => {\n  return (\n    <MenuBar\n      links={[\n        { path: '/', label: 'Products' },\n        { path: '/new', label: 'Add new product' }\n      ]}\n    />\n  );\n};\n\nexport default Navigation;\n","export const formatMoney = value => {\n  return parseFloat(value).toFixed(2);\n};\n\nexport const formatDate = value => {\n  return new Date(value).toLocaleDateString('en-US', {\n    hour: '2-digit',\n    minute: '2-digit'\n  });\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport Notification from 'react-bulma-notification';\n\nimport * as actions from '../../../../../../store/actions/productActions';\n\nconst deleteProduct = (functionToDeleteAProduct, id) => {\n  Notification.success('Product deleted!');\n  functionToDeleteAProduct(id);\n};\n\nconst ProductItemActions = props => {\n  return (\n    <div className=\"buttons\">\n      <NavLink className=\"button is-info\" to={'/view/' + props.productId}>\n        View\n      </NavLink>\n      <NavLink className=\"button is-primary\" to={'/edit/' + props.productId}>\n        Edit\n      </NavLink>\n      <button\n        className=\"button is-danger\"\n        onClick={() => deleteProduct(props.deleteProduct, props.productId)}\n      >\n        Delete\n      </button>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    deleteProduct: productId => dispatch(actions.deleteProduct(productId))\n  };\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(ProductItemActions);\n","import * as actionTypes from './actionTypes';\n\nexport const addProduct = product => {\n  return {\n    type: actionTypes.ADD_PRODUCT,\n    product: product\n  };\n};\n\nexport const updateProduct = product => {\n  return {\n    type: actionTypes.UPDATE_PRODUCT,\n    product: product\n  };\n};\n\nexport const deleteProduct = productId => {\n  return {\n    type: actionTypes.DELETE_PRODUCT,\n    id: productId\n  };\n};\n","export const ADD_PRODUCT = 'ADD_PRODUCT';\nexport const UPDATE_PRODUCT = 'UPDATE_PRODUCT';\nexport const DELETE_PRODUCT = 'DELETE_PRODUCT';\n","import React from 'react';\n\nimport styles from './ProductItem.module.css';\nimport { formatMoney, formatDate } from '../../../../shared/formatters';\nimport ProductItemActions from './components/productItemActions/';\n\nconst ProductItem = props => {\n  return (\n    <div className={[styles.Product, 'column', 'is-one-quarter'].join(' ')}>\n      <p>{props.product.name}</p>\n      <strong>U$ {formatMoney(props.product.price)}</strong>\n      <div>created at: {formatDate(props.product.creationDate)}</div>\n      <ProductItemActions productId={props.product.id} />\n    </div>\n  );\n};\n\nexport default ProductItem;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport ProductItem from './components/productItem/';\n\nconst ProductList = props => {\n  useEffect(() => {\n    document.title = 'This app has ' + props.products.length + ' products';\n  });\n\n  var itens = props.products.map(p => <ProductItem key={p.id} product={p} />);\n\n  return <div className=\"columns is-multiline\">{itens}</div>;\n};\n\nconst mapStateToProps = state => {\n  return {\n    products: state.products\n  };\n};\n\nexport default connect(mapStateToProps)(ProductList);\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nexport const withItemIdFromUrl = WrappedComponent => {\n  return props => {\n    var id = parseInt(props.match.params.id);\n    const item = props.items.find(p => p.id === id);\n\n    if (!item) {\n      return <Redirect to=\"/\" />;\n    }\n    return <WrappedComponent {...props} item={item} />;\n  };\n};\n\nexport default withItemIdFromUrl;\n","import React from 'react';\nimport styles from './Validation.module.css';\n\nexport const required = (value, props) => {\n  if (!value.toString().trim().length) {\n    return <p className={styles.Error}>{props.name + ' is required'}</p>;\n  }\n};\n\nexport const graterThen = (value, props) => {\n  if (value <= props.min) {\n    return (\n      <p className={styles.Error}>\n        {props.name + ' should be greater than ' + props.min}\n      </p>\n    );\n  }\n};\n","import React, { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Form from 'react-validation/build/form';\nimport Button from 'react-validation/build/button';\nimport Input from 'react-validation/build/input';\nimport TextArea from 'react-validation/build/textarea';\nimport { NavLink } from 'react-router-dom';\nimport Notification from 'react-bulma-notification';\n\nimport styles from './ProductForm.module.css';\nimport { required, graterThen } from '../../shared/Validation/';\n\nconst submitForm = (event, props, product) => {\n  event.preventDefault();\n  props.saveProduct(product);\n  props.history.push('/');\n  Notification.success('Product saved!');\n};\n\nconst ProductForm = props => {\n  const [product, updateProduct] = useState({\n    id: props.product.id,\n    price: props.product.price,\n    name: props.product.name,\n    description: props.product.description\n  });\n\n  return (\n    <Form onSubmit={event => submitForm(event, props, product)}>\n      <input type=\"hidden\" name=\"id\" value={product.id} />\n      <div className=\"control\">\n        <label className=\"label\">Name</label>\n        <Input\n          className=\"input\"\n          type=\"text\"\n          name=\"name\"\n          value={product.name}\n          onChange={event =>\n            updateProduct({ ...product, name: event.target.value })\n          }\n          validations={[required]}\n        />\n      </div>\n      <div className=\"control\">\n        <label className=\"label\">Price</label>\n        <Input\n          type=\"number\"\n          name=\"price\"\n          step=\"0.01\"\n          min=\"0\"\n          value={product.price}\n          validations={[required, graterThen]}\n          onChange={event =>\n            updateProduct({ ...product, price: event.target.value })\n          }\n        />\n      </div>\n      <div className=\"control\">\n        <label className=\"label\">Description</label>\n        <TextArea\n          className=\"textarea\"\n          name=\"description\"\n          value={product.description}\n          onChange={event =>\n            updateProduct({ ...product, description: event.target.value })\n          }\n          validations={[required]}\n        >\n          {product.description}\n        </TextArea>\n      </div>\n      <div className={[styles.ButtonsArea, 'control', 'buttons'].join(' ')}>\n        <Button className=\"button is-primary\" type=\"submit\">\n          Save\n        </Button>\n        <NavLink className=\"button is-link\" to=\"/\">\n          Show product list\n        </NavLink>\n      </div>\n    </Form>\n  );\n};\n\nexport default withRouter(ProductForm);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport withItemIdFromUrl from '../../hoc/withIdFromUrl/';\nimport * as actions from '../../store/actions/productActions';\nimport ProductForm from '../productForm/';\n\nconst EditProduct = props => {\n  return <ProductForm saveProduct={props.updateProduct} product={props.item} />;\n};\n\nconst mapStateToProps = state => {\n  return {\n    items: state.products\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateProduct: product => dispatch(actions.updateProduct(product))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withItemIdFromUrl(EditProduct));\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\n\nimport withItemIdFromUrl from '../../hoc/withIdFromUrl/';\nimport styles from './ViewProduct.module.css';\nimport { formatMoney, formatDate } from '../../shared/formatters';\n\nconst ViewProduct = props => {\n  return (\n    <div className={styles.ViewProduct}>\n      <p>{props.item.name}</p>\n      <strong>U$ {formatMoney(props.item.price)}</strong>\n      <div>created at: {formatDate(props.item.creationDate)}</div>\n      <div className=\"content\">{props.item.description}</div>\n      <NavLink className=\"button is-info\" to=\"/\">\n        Show list\n      </NavLink>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    items: state.products\n  };\n};\n\nexport default connect(mapStateToProps)(withItemIdFromUrl(ViewProduct));\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport * as actions from '../../store/actions/productActions';\nimport ProductForm from '../productForm/';\n\nconst NewProduct = props => {\n  return (\n    <ProductForm\n      saveProduct={props.addProduct}\n      product={{ id: 0, price: 0, name: '', description: '' }}\n    />\n  );\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addProduct: product => dispatch(actions.addProduct(product))\n  };\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(NewProduct);\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport styles from './App.module.css';\nimport Navigation from './screens/navigation/';\nimport ProductList from './screens/productList/';\nimport EditProduct from './screens/editProduct/';\nimport ViewProduct from './screens/viewProduct/';\nimport NewProduct from './screens/newProduct/';\n\nconst App = () => {\n  return (\n    <>\n      <Navigation />\n      <div className={[styles.MainContainer, 'container'].join(' ')}>\n        <Switch>\n          <Route path=\"/new\" component={NewProduct} />\n          <Route path=\"/edit/:id\" exact component={EditProduct} />\n          <Route path=\"/view/:id\" exact component={ViewProduct} />\n          <Route path=\"/\" render={() => <ProductList />} />\n        </Switch>\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n  products: [\n    {\n      id: 1,\n      price: 13.5,\n      name: 'keyboard',\n      description: 'A keyboard full of keys',\n      creationDate: Date()\n    },\n    {\n      id: 2,\n      price: 7.75,\n      name: 'mouse',\n      description: 'A mouse with three buttons',\n      creationDate: Date()\n    },\n    {\n      id: 3,\n      price: 700,\n      name: 'laptop',\n      description: 'A laptop with screen and a keyboard',\n      creationDate: Date()\n    },\n    {\n      id: 4,\n      price: 150,\n      name: 'monitor',\n      description: 'A widescreen monitor',\n      creationDate: Date()\n    },\n    {\n      id: 5,\n      price: 120.99,\n      name: 'desk',\n      description: 'A big desk',\n      creationDate: Date()\n    }\n  ]\n};\n\nconst getMaxIdFromState = state => {\n  if (state.products.length === 0){\n    return 0;\n  } \n  return Math.max.apply(Math, state.products.map(p => p.id));\n};\n\nconst addProduct = (state, action) => {\n  const newProductList = [\n    ...state.products,\n    {\n      ...action.product,\n      id: getMaxIdFromState(state) + 1,\n      creationDate: Date()\n    }\n  ];\n  return { products: newProductList };\n};\n\nconst updateProduct = (state, action) => {\n  const newProductList = state.products.map(item => {\n    if (item.id === action.product.id){\n      return { ...action.product, creationDate: item.creationDate };\n    }      \n    return item;\n  });\n  return { products: newProductList };\n};\n\nconst deleteProduct = (state, action) => {\n  const newProductList = state.products.filter(item => action.id !== item.id);\n  return { products: newProductList };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_PRODUCT:\n      return addProduct(state, action);\n    case actionTypes.UPDATE_PRODUCT:\n      return updateProduct(state, action);\n    case actionTypes.DELETE_PRODUCT:\n      return deleteProduct(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\n\nimport 'bulma/css/bulma.css';\nimport 'react-bulma-notification/build/css/index.css';\nimport App from './App';\nimport reducer from './store/reducers/productRecucers';\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}