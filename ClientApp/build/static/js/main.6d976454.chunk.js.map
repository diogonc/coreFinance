{"version":3,"sources":["shared/Validation/Validation.module.css","App.module.css","screens/group/list/listItem/GroupItem.module.css","screens/group/form/form.module.css","serviceWorker.js","components/MenuBar/index.js","screens/navigation/index.js","screens/group/list/listItem/actions.js","store/actions/groupActions.js","store/actions/actionTypes.js","screens/group/list/listItem/index.js","screens/group/listGroup.js","shared/Validation/index.js","screens/group/form/index.js","screens/group/newGroup.js","hoc/withIdFromUrl/index.js","screens/group/editGroup.js","App.js","store/reducers/productReducers.js","store/reducers/groupReducers.js","store/reducers/index.js","index.js"],"names":["module","exports","Error","MainContainer","Item","ButtonsArea","Boolean","window","location","hostname","match","MenuBar","props","links","map","link","react_default","a","createElement","react_router_dom","className","to","path","exact","key","label","role","aria-label","Navigation","components_MenuBar","connect","dispatch","deleteGroup","uuid","type","actions","onClick","functionToDeleteAGroup","Notification","success","GroupItem","styles","join","item","name","priority","categoryType","state","items","group","listItem","required","value","toString","trim","length","graterThen","min","withRouter","_useState","useState","_useState2","Object","slicedToArray","updateGroup","form_default","onSubmit","event","preventDefault","save","history","push","submitForm","input_default","onChange","objectSpread","target","validations","step","max","button_default","add","group_form","id","withItemUuidFromUrl","WrappedComponent","console","log","parseInt","params","find","assign","react_router","update","App","Fragment","navigation","render","newGroup","component","EditGroup","listGroup","initialState","products","price","description","creationDate","Date","getMaxIdFromState","Math","apply","p","reducer","arguments","undefined","action","concat","toConsumableArray","product","addProduct","updateProduct","filter","deleteProduct","getTime","deleteItem","combineReducers","store","createStore","offline","config","ReactDOM","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6d976454.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Error\":\"Validation_Error__3W5SM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainContainer\":\"App_MainContainer__3gr_b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Item\":\"GroupItem_Item__3pilq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ButtonsArea\":\"form_ButtonsArea__9LtZT\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst MenuBar = props => {\n  const links = props.links.map(link => (\n    <NavLink className=\"navbar-item\" to={link.path} exact key={link.path}>\n      {link.label}\n    </NavLink>\n  ));\n  return (\n    <nav\n      className=\"navbar is-primary\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"navbar-menu\">\n        <div className=\"navbar-start\">{links}</div>\n      </div>\n    </nav>\n  );\n};\n\nexport default MenuBar;\n","import React from 'react';\n\nimport MenuBar from '../../components/MenuBar';\n\nconst Navigation = () => {\n  return (\n    <MenuBar\n      links={[\n        { path: '/groups', label: 'Groups' }\n      ]}\n    />\n  );\n};\n\nexport default Navigation;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport Notification from 'react-bulma-notification';\n\nimport * as actions from '../../../../store/actions/groupActions';\n\nconst deleteGroup = (functionToDeleteAGroup, uuid) => {\n  Notification.success('Group deleted!');\n  functionToDeleteAGroup(uuid);\n};\n\nconst Actions = props => {\n  return (\n    <div className=\"buttons\">\n      <NavLink className=\"button is-primary\" to={'/groups/edit/' + props.uuid}>\n        Edit\n      </NavLink>\n      <button\n        className=\"button is-danger\"\n        onClick={() => deleteGroup(props.deleteGroup, props.uuid)}\n      >\n        Delete\n      </button>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    deleteGroup: uuid => dispatch(actions.deleteGroup(uuid))\n  };\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(Actions);\n","import * as actionTypes from './actionTypes';\n\nexport const addGroup = group => {\n  return {\n    type: actionTypes.ADD_GROUP,\n    item: group\n  };\n};\n\nexport const updateGroup = group => {\n  return {\n    type: actionTypes.UPDATE_GROUP,\n    item: group\n  };\n};\n\nexport const deleteGroup = uuid => {\n  return {\n    type: actionTypes.DELETE_GROUP,\n    uuid: uuid\n  };\n};\n","export const ADD_PRODUCT = 'ADD_PRODUCT';\nexport const UPDATE_PRODUCT = 'UPDATE_PRODUCT';\nexport const DELETE_PRODUCT = 'DELETE_PRODUCT';\nexport const ADD_GROUP = 'ADD_GROUP';\nexport const UPDATE_GROUP = 'UPDATE_GROUP';\nexport const DELETE_GROUP = 'DELETE_GROUP';\n","import React from 'react';\n\nimport styles from './GroupItem.module.css';\nimport Actions from './actions';\n\nconst GroupItem = props => {\n  return (\n    <div className={[styles.Item, 'column', 'is-one-quarter'].join(' ')}>\n      <p>{props.item.name}</p>\n      <strong>{props.item.priority}</strong>\n      <strong>{props.item.categoryType}</strong>\n      <Actions uuid={props.item.uuid} />\n    </div>\n  );\n};\n\nexport default GroupItem;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport GroupItem from './list/listItem';\n\nconst ListGroup = props => {\n  var items = props.items.map(item => <GroupItem key={item.uuid} item={item} />);\n\n  return (\n    <div className=\"columns is-multiline\">\n      <NavLink className=\"button is-primary\" to={'/groups/new/'}>\n        New\n      </NavLink>\n      {items}\n    </div>);\n};\n\nconst mapStateToProps = state => {\n  return {\n    items: state.group.items\n  };\n};\n\nexport default connect(mapStateToProps)(ListGroup);\n","import React from 'react';\nimport styles from './Validation.module.css';\n\nexport const required = (value, props) => {\n  if (!value.toString().trim().length) {\n    return <p className={styles.Error}>{props.name + ' is required'}</p>;\n  }\n};\n\nexport const graterThen = (value, props) => {\n  if (value <= props.min) {\n    return (\n      <p className={styles.Error}>\n        {props.name + ' should be greater than ' + props.min}\n      </p>\n    );\n  }\n};\n","import React, { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Form from 'react-validation/build/form';\nimport Button from 'react-validation/build/button';\nimport Input from 'react-validation/build/input';\nimport { NavLink } from 'react-router-dom';\nimport Notification from 'react-bulma-notification';\n\nimport styles from './form.module.css';\nimport { required, graterThen } from '../../../shared/Validation/';\n\nconst submitForm = (event, props, group) => {\n  event.preventDefault();\n  props.save(group);\n  props.history.push('/groups');\n  Notification.success('Group saved!');\n};\n\nconst GroupForm = props => {\n  const [group, updateGroup] = useState({\n    uuid: props.item.uuid,\n    name: props.item.name,\n    priority: props.item.priority,\n    categoryType: props.item.categoryType,\n  });\n\n  return (\n    <Form onSubmit={event => submitForm(event, props, group)}>\n      <input type=\"hidden\" name=\"id\" value={group.uuid} />\n      <div className=\"control\">\n        <label className=\"label\">Nome</label>\n        <Input\n          className=\"input\"\n          type=\"text\"\n          name=\"name\"\n          value={group.name}\n          onChange={event =>\n            updateGroup({ ...group, name: event.target.value })\n          }\n          validations={[required]}\n        />\n      </div>\n      <div className=\"control\">\n        <label className=\"label\">Prioridade</label>\n        <Input\n          type=\"number\"\n          name=\"priority\"\n          step=\"1\"\n          min=\"0\"\n          value={group.priority}\n          validations={[required, graterThen]}\n          onChange={event =>\n            updateGroup({ ...group, priority: event.target.value })\n          }\n        />\n      </div>\n      <div className=\"control\">\n        <label className=\"label\">Tipo</label>\n        <Input\n          type=\"number\"\n          name=\"categoryType\"\n          step=\"1\"\n          min=\"0\"\n          max=\"4\"\n          value={group.categoryType}\n          validations={[required, graterThen]}\n          onChange={event =>\n            updateGroup({ ...group, categoryType: event.target.value })\n          }\n        />\n      </div>\n      <div className={[styles.ButtonsArea, 'control', 'buttons'].join(' ')}>\n        <Button className=\"button is-primary\" type=\"submit\">\n          Save\n        </Button>\n        <NavLink className=\"button is-link\" to=\"/groups\">\n          Show list\n        </NavLink>\n      </div>\n    </Form>\n  );\n};\n\nexport default withRouter(GroupForm);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport * as actions from '../../store/actions/groupActions';\nimport GroupForm from './form/';\n\nconst NewGroup = props => {\n  return (\n    <GroupForm\n      save={props.add}\n      item={{ id: 0, priority: 1, name: '', categoryType: 1 }}\n    />\n  );\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    add: item => dispatch(actions.addGroup(item))\n  };\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(NewGroup);\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nexport const withItemUuidFromUrl = WrappedComponent => {\n  return props => {\n    console.log(props);\n    var uuid = parseInt(props.match.params.uuid);\n    const item = props.items.find(item => item.uuid === uuid);\n\n    if (!item) {\n      return <Redirect to=\"/groups\" />;\n    }\n    return <WrappedComponent {...props} item={item} />;\n  };\n};\n\nexport default withItemUuidFromUrl;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport withItemUuidFromUrl from '../../hoc/withIdFromUrl';\nimport * as actions from '../../store/actions/groupActions';\nimport GroupForm from './form/';\n\nconst EditGroup = props => {\n  return <GroupForm save={props.update} item={props.item} />;\n};\n\nconst mapStateToProps = state => {\n  return {\n    items: state.group.items\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    update: item => dispatch(actions.updateGroup(item))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withItemUuidFromUrl(EditGroup));\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport styles from './App.module.css';\nimport Navigation from './screens/navigation/';\nimport ListGroup from './screens/group/listGroup';\nimport NewGroup from './screens/group/newGroup';\nimport EditGroup from './screens/group/editGroup';\n\nconst App = () => {\n  return (\n    <>\n      <Navigation />\n      <div className={[styles.MainContainer, 'container'].join(' ')}>\n        <Switch>\n          <Route path=\"/groups/new\" render={() => <NewGroup />} />\n          <Route path=\"/groups/edit/:uuid\" exact component={EditGroup} />\n          <Route path=\"/groups\" exact render={() => <ListGroup />} />\n          <Route exact path=\"/\" render={() => <ListGroup />} />\n        </Switch>\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n  products: [\n    {\n      id: 1,\n      price: 13.5,\n      name: 'keyboard',\n      description: 'A keyboard full of keys',\n      creationDate: Date()\n    },\n    {\n      id: 2,\n      price: 7.75,\n      name: 'mouse',\n      description: 'A mouse with three buttons',\n      creationDate: Date()\n    },\n    {\n      id: 3,\n      price: 700,\n      name: 'laptop',\n      description: 'A laptop with screen and a keyboard',\n      creationDate: Date()\n    },\n    {\n      id: 4,\n      price: 150,\n      name: 'monitor',\n      description: 'A widescreen monitor',\n      creationDate: Date()\n    },\n    {\n      id: 5,\n      price: 120.99,\n      name: 'desk',\n      description: 'A big desk',\n      creationDate: Date()\n    }\n  ]\n};\n\nconst getMaxIdFromState = state => {\n  if (state.products.length === 0){\n    return 0;\n  } \n  return Math.max.apply(Math, state.products.map(p => p.id));\n};\n\nconst addProduct = (state, action) => {\n  const newProductList = [\n    ...state.products,\n    {\n      ...action.product,\n      id: getMaxIdFromState(state) + 1,\n      creationDate: Date()\n    }\n  ];\n  return { products: newProductList };\n};\n\nconst updateProduct = (state, action) => {\n  const newProductList = state.products.map(item => {\n    if (item.id === action.product.id){\n      return { ...action.product, creationDate: item.creationDate };\n    }      \n    return item;\n  });\n  return { products: newProductList };\n};\n\nconst deleteProduct = (state, action) => {\n  const newProductList = state.products.filter(item => action.id !== item.id);\n  return { products: newProductList };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_PRODUCT:\n      return addProduct(state, action);\n    case actionTypes.UPDATE_PRODUCT:\n      return updateProduct(state, action);\n    case actionTypes.DELETE_PRODUCT:\n      return deleteProduct(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n  items: [\n    {\n      uuid: 1,\n      priority: 1,\n      name: 'keyboard',\n      type: 1\n    },\n    {\n      uuid: 2,\n      priority: 2,\n      name: 'keyb222oard',\n      type: 2\n    }\n  ]\n};\n\nconst add = (state, action) => {\n  const newList = [\n    ...state.items,\n    {\n      ...action.item,\n      uuid: ((new Date().getTime() * 10000) + 621355968000000000)\n    }\n  ];\n  return { items: newList };\n};\n\nconst update = (state, action) => {\n  const newList = state.items.map(item => {\n    if (item.uuid === action.item.uuid) {\n      return { ...action.item };\n    }\n    return item;\n  });\n  return { items: newList };\n};\n\nconst deleteItem = (state, action) => {\n  const newList = state.items.filter(item => action.uuid !== item.uuid);\n  return { items: newList };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_GROUP:\n      return add(state, action);\n    case actionTypes.UPDATE_GROUP:\n      return update(state, action);\n    case actionTypes.DELETE_GROUP:\n      return deleteItem(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { combineReducers } from 'redux'\nimport product from './productReducers'\nimport group from './groupReducers'\n\nexport default combineReducers({\n    product,\n    group\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport { offline } from '@redux-offline/redux-offline';\nimport config from '@redux-offline/redux-offline/lib/config';\n\nimport 'bulma/css/bulma.css';\nimport 'react-bulma-notification/build/css/index.css';\nimport App from './App';\nimport reducer from './store/reducers';\n\nconst store = createStore(reducer, offline(config))\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}